/* ==========================================================================
   SITE-WIDE LAYOUT CONSISTENCY FIX
   Establishes a consistent container system for your entire site
   ========================================================================== */

/* ==========================================================================
   1. Define the content container that everything should respect
   ========================================================================== */

/* This is the standard width for ALL content sections */
:root {
  --content-max-width: calc(
    800px + 48px + 380px
  ); /* main + gap + aside = 1228px */
  --content-padding: 2rem;
  --content-total-width: calc(
    var(--content-max-width) + (2 * var(--content-padding))
  ); /* 1292px */
}

/* ==========================================================================
   2. Main content area (right of sidebar)
   ========================================================================== */

.main-content {
  flex: 1;
  margin-left: var(--sidebar-width);
  max-width: calc(1400px - var(--sidebar-width));
  padding: 0; /* Remove default padding, let children handle it */
  width: 100%;
}

/* ==========================================================================
   3. Split content wrapper - The main two-column layout
   ========================================================================== */

.split-content-wrapper {
  align-items: start;
  display: grid;
  gap: 48px;
  grid-template-columns: 800px 380px;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  margin-top: var(--space-3xl);
  max-width: var(--content-total-width);
  padding: 0 var(--content-padding);
  width: 100%;
}

.main-content-area {
  min-width: 0;
  width: 100%;
}

.content-aside {
  position: relative;
  width: 100%;
}

/* ==========================================================================
   4. Horizontal scroll - Match split-content-wrapper EXACTLY
   ========================================================================== */

.horizontal-scroll-section {
  /* Remove the border OR contain it properly */
  border-bottom: none; /* We'll add a pseudo-element for the border */
  margin: var(--space-lg) auto 0 auto;
  max-width: var(--content-total-width);
  overflow: visible;
  padding: 0 var(--content-padding) var(--space-2xl) var(--content-padding);
  position: relative;
  width: 100%;
}

/* Add border with proper width using pseudo-element */
.horizontal-scroll-section::after {
  background: var(--color-border-dark);
  bottom: 0;
  content: '';
  height: 1px;
  left: var(--content-padding); /* Start where content starts */
  position: absolute;
  right: var(--content-padding); /* End where content ends */
}

.horizontal-scroll-header {
  align-items: center;
  display: flex;
  justify-content: space-between;
  margin: 0 0 var(--space-lg) 0;
  width: 100%;
}

.horizontal-scroll-container {
  margin: 0;
  padding: 0;
  position: relative;
  width: 100%;
}

.horizontal-scroll-track {
  -ms-overflow-style: none;
  cursor: grab;
  display: flex;
  gap: var(--space-lg);
  max-width: var(--content-max-width); /* Exact content width */
  overflow-x: auto;
  padding-bottom: var(--space-sm);
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  scrollbar-width: none;
  user-select: none;
  width: 100%;
}

/* ==========================================================================
   5. Other full-width sections that need consistency
   ========================================================================== */

/* Blog feed section */
.article-loop {
  background: #f5f7fa;
  border: 1px solid #e6eaef;
  margin-left: auto;
  margin-right: auto;
  max-width: var(--content-total-width);
  padding: 3rem var(--content-padding);
  width: 100%;
}

/* CTA Banner */
.cta-banner {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--content-total-width);
  padding: 0 var(--content-padding);
  width: 100%;
}

/* Any other section that should align */
.content-section,
.section-wrapper {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--content-total-width);
  padding: 0 var(--content-padding);
  width: 100%;
}

/* ==========================================================================
   6. Responsive behavior - Keep everything aligned
   ========================================================================== */

@media (max-width: 1320px) {
  /* When viewport is smaller than content + sidebar */
  .split-content-wrapper,
  .horizontal-scroll-section,
  .article-loop,
  .cta-banner,
  .content-section {
    max-width: 100%;
  }
}

@media (max-width: 1199px) {
  /* Tablet - stack the split-content */
  .split-content-wrapper {
    gap: var(--space-3xl);
    grid-template-columns: 1fr;
    padding: 0 var(--space-xl);
  }

  .horizontal-scroll-section {
    padding: 0 var(--space-xl) var(--space-2xl) var(--space-xl);
  }

  .horizontal-scroll-section::after {
    left: var(--space-xl);
    right: var(--space-xl);
  }

  .article-loop {
    padding: 3rem var(--space-xl);
  }
}

@media (max-width: 767px) {
  /* Mobile - tighter padding */
  :root {
    --content-padding: var(--space-lg);
  }

  .split-content-wrapper {
    gap: var(--space-2xl);
    margin-top: var(--space-2xl);
    padding: 0 var(--space-lg);
  }

  .horizontal-scroll-section {
    padding: 0 var(--space-lg) var(--space-2xl) var(--space-lg);
  }

  .horizontal-scroll-section::after {
    left: var(--space-lg);
    right: var(--space-lg);
  }

  .article-loop {
    padding: 2rem var(--space-lg);
  }

  .main-content {
    margin-left: 0;
    padding: 0;
  }
}

/* ==========================================================================
   7. Debug helper (remove in production)
   ========================================================================== */

/* Uncomment to see the alignment grid */
/*
.horizontal-scroll-section,
.split-content-wrapper {
  outline: 1px dashed red;
}

.horizontal-scroll-track,
.main-content-area,
.content-aside {
  outline: 1px dashed blue;
}
*/
